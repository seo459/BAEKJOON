#include <iostream>
using namespace std;

void quicksort(int* arr, int left, int right)
{
	int s = 0;
	int stack[128] = { 0 };
	stack[s++] = left;
	stack[s++] = right;

	while (s > 0)
	{
		right = stack[--s];
		left = stack[--s];
		int low = left + 1; int high = right;
		if (left >= right) continue;
		int pivot = left;
		while (true)
		{
			while (low < right && arr[low] <= arr[pivot])
				low++;
			while (high > left && arr[high] >= arr[pivot]) //attention boundary condition
				high--;
			if (low < high) {
				int tmp = arr[low];
				arr[low] = arr[high];
				arr[high] = tmp;
			}
			else if (low >= high) {
				int tmp2 = arr[pivot];
				arr[pivot] = arr[high];
				arr[high] = tmp2;
				break;
			}
		}
		stack[s++] = left;
		stack[s++] = high - 1;
		stack[s++] = high + 1;
		stack[s++] = right;
	}
	return;
}
int main() {
	int arr[7] = { 2133,5,42,3,2003,2333,2221 };
	quicksort(arr, 0, 6);
	for (int i = 0; i < 7; i++)
		cout << arr[i] << " ";
	return 0;
}
